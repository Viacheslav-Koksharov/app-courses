{"version":3,"file":"static/js/LessonPage.1eb5a5b3.chunk.js","mappings":"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","sources":["components/ScrollTopButton/ScrollTopButton.styled.ts","components/ScrollTopButton/ScrollTopButton.tsx","context/LessonContextProvider.tsx","helpers/formatHelper.ts","helpers/scrollHelper.ts","views/LessonPage/LessonPage.styled.ts","views/LessonPage/LessonPage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { colors } from 'utils/colors';\nimport { secondary } from 'utils/breakpoints';\n\nconst { accent } = colors;\nconst { desktop } = secondary;\n\nconst ButtonStyles = styled.div`\n  position: fixed;\n  bottom: 50px;\n  right: 30px;\n  display: flex;\n  color: ${accent};\n  font-size: 3rem;\n  cursor: pointer;\n  z-index: 1;\n\n  @media screen and (min-width: ${desktop}px) {\n    right: 30px;\n  }\n`;\n\nexport { ButtonStyles };\n","import { useEffect, useState } from 'react';\nimport { BsArrowUpSquareFill } from 'react-icons/bs';\nimport { handleScrollToTop } from 'helpers/scrollHelper';\nimport { ButtonStyles } from 'components/ScrollTopButton/ScrollTopButton.styled';\n\nconst ScrollTopButton = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleVisibility = (): void => {\n      const scroll = document.documentElement.scrollTop;\n\n      if (scroll > 300) {\n        setIsVisible(true);\n      }\n\n      if (scroll <= 300) {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleVisibility);\n\n    return () => {\n      window.removeEventListener('scroll', handleVisibility);\n    };\n  }, []);\n\n  return (\n    <ButtonStyles>\n      <BsArrowUpSquareFill\n        onClick={handleScrollToTop}\n        style={{ display: isVisible ? 'inline' : 'none' }}\n      />\n    </ButtonStyles>\n  );\n};\n\nexport default ScrollTopButton;\n","import { useState, createContext } from 'react';\nimport { ILessonItem } from 'interfaces/LessonsItem.interface';\nimport {\n  ILessonContext,\n  ILessonContextProps,\n} from 'interfaces/LessonContext.interface';\n\nconst LessonContext = createContext<ILessonContext>({\n  lesson: undefined,\n  setLesson: () => {},\n});\n\nconst LessonProvider = ({ children }: ILessonContextProps) => {\n  const [lesson, setLesson] = useState<ILessonItem>();\n\n  const sampleCourseContext: ILessonContext = {\n    lesson,\n    setLesson,\n  };\n\n  return (\n    <LessonContext.Provider value={sampleCourseContext}>\n      {children}\n    </LessonContext.Provider>\n  );\n};\n\nexport { LessonContext, LessonProvider };\n","import Hls from 'hls.js';\n\nconst handleElementFormat = (element: HTMLMediaElement, sourceLink: string) => {\n  const hls = new Hls();\n  hls.loadSource(sourceLink);\n  hls.attachMedia(element);\n};\n\nexport { handleElementFormat };\n","const handleScrollToTop = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n};\n\nconst handleScrollToElement = (element: HTMLHeadingElement) => {\n  element?.scrollIntoView({ behavior: 'smooth' });\n};\n\nexport { handleScrollToTop, handleScrollToElement };\n","import styled from 'styled-components';\n\nconst ImageContainerStyles = styled.div`\n  width: 100%;\n  height: 550px;\n  margin-bottom: 20px;\n`;\n\nconst TitleStyles = styled.h3`\n  margin: 0 0 20px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst TextStyles = styled.p`\n  margin: 0 0 15px 0;\n  text-align: center;\n  color: ${({ theme }) => theme.accent};\n  font-size: 18px;\n  font-weight: 600;\n`;\n\nexport { ImageContainerStyles, TitleStyles, TextStyles };\n","import { useEffect, useContext, useState, useRef } from 'react';\nimport ScrollTopButton from 'components/ScrollTopButton';\nimport video_unavailable from 'images/video_unavailable.png';\nimport { handleElementFormat } from 'helpers/formatHelper';\nimport { handleScrollToElement } from 'helpers/scrollHelper';\nimport { HLS_IS_SUPPORTED } from 'helpers/constants';\nimport { LessonContext } from 'context/LessonContextProvider';\nimport {\n  TitleStyles,\n  TextStyles,\n  ImageContainerStyles,\n} from 'views/LessonPage/LessonPage.styled';\n\nconst LessonPage = () => {\n  const { lesson } = useContext(LessonContext);\n  const [lessonLink, setLessonLink] = useState<string | undefined>(undefined);\n  const [lessonDuration, setLessonDuration] = useState<number | undefined>(\n    undefined,\n  );\n  const [video, setVideo] = useState<HTMLMediaElement>();\n  const [currentTime, setCurrentTime] = useState(\n    () => JSON.parse(window.localStorage.getItem('time')!) ?? [],\n  );\n  const [isPlay, setIsPlay] = useState(false);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const titleRef = useRef<HTMLHeadingElement>(null);\n\n  useEffect(() => {\n    if (lesson) {\n      setLessonLink(lesson?.link);\n      setLessonDuration(lesson?.duration);\n    }\n  }, [lesson]);\n\n  useEffect(() => {\n    const title = titleRef.current;\n\n    if (title) {\n      handleScrollToElement(title);\n    }\n\n    if (HLS_IS_SUPPORTED && lessonLink) {\n      const video = videoRef.current;\n\n      if (video) {\n        setVideo(video);\n        handleElementFormat(video, lessonLink);\n      }\n    }\n  }, [lessonLink]);\n\n  useEffect(() => {\n    if (currentTime.length > 0 && !isPlay) {\n      window.localStorage.setItem('time', JSON.stringify(currentTime));\n    }\n  }, [currentTime, isPlay]);\n\n  const handleVideoTimeUpdate = () => {\n    if (video) {\n      if (video.paused) {\n        video.addEventListener('play', () => {\n          const currentEl = currentTime.find(({ id }) => id === video.id);\n\n          if (currentEl) {\n            video.currentTime = currentEl.time;\n          }\n        });\n\n        setIsPlay(true);\n        return;\n      }\n\n      const currentEl = currentTime.find(({ id }) => id === video.id);\n\n      if (!currentEl) {\n        setCurrentTime([\n          ...currentTime,\n          { id: video.id, time: video.currentTime },\n        ]);\n      } else {\n        currentTime.forEach(({ id, time }) => {\n          if (id === video.id && video.currentTime > 0) {\n            return (time = video.currentTime);\n          }\n        });\n      }\n      setIsPlay(false);\n    }\n  };\n\n  return (\n    <>\n      {lesson && (\n        <>\n          <TitleStyles ref={titleRef}>Lesson {lesson?.order}</TitleStyles>\n          <TextStyles>{lesson?.title}</TextStyles>\n          <ImageContainerStyles onTimeUpdate={handleVideoTimeUpdate}>\n            {lessonLink && lessonDuration ? (\n              <video ref={videoRef} width='100%' height='100%' controls />\n            ) : (\n              <img src={video_unavailable} alt='banner' />\n            )}\n          </ImageContainerStyles>\n          <ScrollTopButton />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default LessonPage;\n"],"names":["accent","colors","desktop","secondary","ButtonStyles","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","isVisible","setIsVisible","useEffect","handleVisibility","scroll","document","documentElement","scrollTop","window","addEventListener","removeEventListener","_jsx","children","BsArrowUpSquareFill","onClick","handleScrollToTop","style","display","LessonContext","createContext","lesson","undefined","setLesson","LessonProvider","_ref","sampleCourseContext","Provider","value","handleElementFormat","element","sourceLink","hls","Hls","loadSource","attachMedia","scrollTo","top","behavior","handleScrollToElement","scrollIntoView","ImageContainerStyles","TitleStyles","_templateObject2","TextStyles","_templateObject3","theme","useContext","lessonLink","setLessonLink","_useState3","_useState4","lessonDuration","setLessonDuration","_useState5","_useState6","video","setVideo","_useState7","_JSON$parse","JSON","parse","localStorage","getItem","_useState8","currentTime","setCurrentTime","_useState9","_useState10","isPlay","setIsPlay","videoRef","useRef","titleRef","link","duration","title","current","HLS_IS_SUPPORTED","length","setItem","stringify","_Fragment","_jsxs","ref","order","onTimeUpdate","paused","currentEl","find","id","time","_ref2","forEach","_ref3","concat","_toConsumableArray","width","height","controls","src","video_unavailable","alt","ScrollTopButton"],"sourceRoot":""}