{"version":3,"file":"static/js/CoursePage.0e02ca01.chunk.js","mappings":"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","sources":["helpers/formatHelper.ts","helpers/scrollHelper.ts","components/LessonsList/Lesson.styled.ts","components/LessonsList/LessonsList.tsx","views/CoursePage/CoursePage.styled.ts","views/CoursePage/CoursePage.tsx"],"sourcesContent":["import Hls from 'hls.js';\n\nconst handleElementFormat = (element, sourceLink) => {\n  const hls = new Hls();\n  hls.loadSource(sourceLink);\n  hls.attachMedia(element);\n};\n\nexport { handleElementFormat };\n","const handleScrollToTop = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n};\n\nconst handleScrollToElement = element => {\n  element?.scrollIntoView({ behavior: 'smooth' });\n};\n\nexport { handleScrollToTop, handleScrollToElement };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { colors } from 'utils/colors';\nimport { secondary } from 'utils/breakpoints';\n\nconst { decor, accent } = colors;\nconst { desktop } = secondary;\n\nconst ListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0 auto 20px;\n\n  @media screen and (min-width: ${desktop}px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst ListItemStyles = styled.li`\n  width: calc((100% - 20px) / 2);\n  margin: 0 0 10px 0;\n  padding: 10px;\n  text-align: center;\n  font-size: 12px;\n  color: ${decor};\n  border: 2px solid ${accent};\n  border-radius: 5px;\n\n  :hover {\n    background-color: ${accent};\n    transform: scale(1.005);\n  }\n\n  @media screen and (min-width: ${desktop}px) {\n    width: calc((100% - 40px) / 5);\n    margin: 0 10px 10px 0;\n\n    &:nth-child(5n) {\n      margin: 0 0 10px 0;\n    }\n  }\n`;\n\nconst LinkItemStyles = styled(Link)`\n  display: block;\n`;\n\nexport { ListStyles, ListItemStyles, LinkItemStyles };\n","import { useContext, useMemo } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { LessonContext } from 'context/LessonContextProvider';\nimport {\n  ListStyles,\n  ListItemStyles,\n  LinkItemStyles,\n} from 'components/LessonsList/Lesson.styled';\n\nconst LessonsList = ({ lessons }) => {\n  const { setLesson } = useContext(LessonContext);\n  const sortedLessons = useMemo(\n    () => [...lessons].sort((a, b) => a.order - b.order),\n    [lessons],\n  );\n\n  const handleNotification = ({ order, title }) =>\n    toast(`The video for the lesson ${order} \"${title}\" is locked!`);\n\n  const handleVideoPlayback = (e, lesson) => {\n    e.preventDefault();\n\n    if (lesson?.status === 'locked') {\n      setLesson(null);\n      handleNotification(lesson);\n    } else {\n      setLesson(lesson);\n    }\n  };\n\n  return (\n    <>\n      <ListStyles>\n        {sortedLessons?.map(lesson => {\n          return (\n            <ListItemStyles\n              key={lesson.id}\n              onClick={e => handleVideoPlayback(e, lesson)}\n            >\n              <LinkItemStyles to={'lesson'}>\n                <b>Lesson {lesson.order}.</b>\n                <br />\n                {lesson.title}\n              </LinkItemStyles>\n            </ListItemStyles>\n          );\n        })}\n      </ListStyles>\n      <Outlet />\n    </>\n  );\n};\n\nexport default LessonsList;\n","import styled from 'styled-components';\nimport { colors } from 'utils/colors';\n\nconst { main, accent } = colors;\n\nconst TitleStyles = styled.h1`\n  margin: 0 0 20px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst ImageContainerStyles = styled.div`\n  width: 60%;\n  height: 60%;\n  margin: 0 auto 20px;\n`;\n\nconst TextStyles = styled.p`\n  margin: 0 0 20px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  color: ${accent};\n`;\n\nconst SkillsListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n  margin: 0 auto 20px;\n`;\n\nconst SkillItemStyles = styled.li`\n  margin: 0 10px 0 0;\n  text-align: center;\n  font-size: 16px;\n  color: ${main};\n`;\n\nexport {\n  TitleStyles,\n  ImageContainerStyles,\n  TextStyles,\n  SkillsListStyles,\n  SkillItemStyles,\n};\n","import { useEffect, useState, useRef, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport LessonsList from 'components/LessonsList';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport site_unavailable from 'images/site_unavailable.jpg';\nimport video_unavailable from 'images/video_unavailable.png';\nimport { IDLE, PENDING, RESOLVED, REJECTED, HLS_IS_SUPPORTED } from 'helpers/constants';\nimport { handleElementFormat } from 'helpers/formatHelper';\nimport { handleScrollToTop } from 'helpers/scrollHelper';\nimport { getCourseByID } from 'services/api';\nimport { TokenContext } from 'context/TokenContextProvider';\nimport { ICoursesItem } from 'interfaces/CoursesItem.interface';\nimport { colors } from 'utils/colors';\nimport {\n  TitleStyles,\n  ImageContainerStyles,\n  TextStyles,\n  SkillsListStyles,\n  SkillItemStyles,\n} from 'views/CoursePage/CoursePage.styled';\n\nconst CoursePage = () => {\n  const { token } = useContext(TokenContext);\n  const [status, setStatus] = useState(IDLE);\n  const [course, setCourse] = useState<ICoursesItem>();\n  const [error, setError] = useState(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const { id } = useParams();\n  const firstLesson = course?.lessons![0];\n  const firstLessonLink = firstLesson?.link;\n  const firstLessonDuration = firstLesson?.duration;\n  const { main } = colors;\n\n  useEffect(() => {\n    setStatus(PENDING);\n\n    if (id && token) {\n      getCourseByID(id, token).then(response => {\n        if (response.message) {\n          setStatus(REJECTED);\n          setError(response.message);\n        } else {\n          setStatus(RESOLVED);\n          setCourse(response);\n        }\n      });\n\n      handleScrollToTop();\n    }\n  }, [id, token]);\n\n  useEffect(() => {\n    if (HLS_IS_SUPPORTED && firstLessonLink) {\n      const video = videoRef.current as HTMLMediaElement;\n\n      if (video) {\n        handleElementFormat(video, firstLessonLink);\n      }\n    }\n  }, [firstLessonLink]);\n\n  if (status === PENDING)\n    return (\n      <Loader\n        ariaLabel={'ThreeDots'}\n        height={100}\n        width={100}\n        radius={5}\n        color={main}\n      />\n    );\n\n  if (status === REJECTED)\n    return <Error error={error} image={site_unavailable} />;\n\n  if (status === RESOLVED)\n    return (\n      <>\n        <TitleStyles>Course: {course?.title}</TitleStyles>\n        <ImageContainerStyles>\n          {firstLessonLink && firstLessonDuration ? (\n            <video ref={videoRef} width='100%' height='100%' controls />\n          ) : (\n            <img src={video_unavailable} alt='video unavailable' />\n          )}\n        </ImageContainerStyles>\n        <TextStyles>Description: {course?.description}</TextStyles>\n        <SkillsListStyles>\n          {course?.meta?.skills?.map(skill => (\n            <SkillItemStyles key={skill}>#{skill}</SkillItemStyles>\n          ))}\n        </SkillsListStyles>\n        <LessonsList lessons={course?.lessons} />\n      </>\n    );\n\n  return <></>;\n};\n\nexport default CoursePage;\n"],"names":["handleElementFormat","element","sourceLink","hls","Hls","loadSource","attachMedia","handleScrollToTop","window","scrollTo","top","behavior","handleScrollToElement","scrollIntoView","decor","colors","accent","desktop","secondary","ListStyles","styled","_templateObject","_taggedTemplateLiteral","ListItemStyles","_templateObject2","LinkItemStyles","Link","_templateObject3","_ref","lessons","setLesson","useContext","LessonContext","sortedLessons","useMemo","_toConsumableArray","sort","a","b","order","handleVideoPlayback","e","lesson","preventDefault","status","_ref2","title","toast","concat","handleNotification","_jsxs","_Fragment","children","_jsx","map","onClick","to","id","Outlet","main","TitleStyles","ImageContainerStyles","TextStyles","SkillsListStyles","_templateObject4","SkillItemStyles","_templateObject5","_course$meta","_course$meta$skills","token","TokenContext","_useState","useState","IDLE","_useState2","_slicedToArray","setStatus","_useState3","_useState4","course","setCourse","_useState5","_useState6","error","setError","videoRef","useRef","useParams","firstLesson","firstLessonLink","link","firstLessonDuration","duration","useEffect","PENDING","getCourseByID","then","response","message","REJECTED","RESOLVED","HLS_IS_SUPPORTED","video","current","Loader","ariaLabel","height","width","radius","color","Error","image","site_unavailable","ref","controls","src","video_unavailable","alt","description","meta","skills","skill","LessonsList"],"sourceRoot":""}