{"version":3,"file":"static/js/CoursePage.e1832f96.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","context/LessonContextProvider.tsx","helpers/formatHelper.ts","components/LessonsList/LessonList.styled.ts","components/LessonsList/LessonsList.tsx","views/CoursePage/CoursePage.styled.ts","views/CoursePage/CoursePage.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { secondary } from 'utils/breakpoints';\n\nconst { desktop } = secondary;\n\nconst ContainerStyles = styled.div`\n  position: relative;\n  height: 100vh;\n`;\n\nconst SpinnerStyles = styled.div`\n  position: absolute;\n  top: 20%;\n  left: 50%;\n  transform: translate(-50%, -20%);\n\n  @media screen and (min-width: ${desktop}px) {\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n`;\n\nexport { ContainerStyles, SpinnerStyles };\n","import { BallTriangle } from 'react-loader-spinner';\nimport { ILoader } from 'interfaces/Loader.interface';\nimport {\n  ContainerStyles,\n  SpinnerStyles,\n} from 'components/Loader/Loader.styled';\n\nconst Loader = ({ ariaLabel, height, width, radius, color }: ILoader) => (\n  <ContainerStyles>\n    <SpinnerStyles>\n      <BallTriangle\n        ariaLabel={ariaLabel}\n        height={height}\n        width={width}\n        radius={radius}\n        color={color}\n      />\n    </SpinnerStyles>\n  </ContainerStyles>\n);\n\nexport default Loader;\n","import { useState, createContext } from 'react';\nimport { ILessonItem } from 'interfaces/LessonsItem.interface';\nimport {\n  ILessonContext,\n  ILessonContextProps,\n} from 'interfaces/LessonContext.interface';\n\nconst LessonContext = createContext<ILessonContext>({\n  lesson: undefined,\n  setLesson: () => {},\n});\n\nconst LessonProvider = ({ children }: ILessonContextProps) => {\n  const [lesson, setLesson] = useState<ILessonItem>();\n\n  const sampleCourseContext: ILessonContext = {\n    lesson,\n    setLesson,\n  };\n\n  return (\n    <LessonContext.Provider value={sampleCourseContext}>\n      {children}\n    </LessonContext.Provider>\n  );\n};\n\nexport { LessonContext, LessonProvider };\n","import Hls from 'hls.js';\n\nconst handleElementFormat = (element: HTMLMediaElement, sourceLink: string) => {\n  const hls = new Hls();\n  hls.loadSource(sourceLink);\n  hls.attachMedia(element);\n};\n\nexport { handleElementFormat };\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { colors } from 'utils/colors';\nimport { secondary } from 'utils/breakpoints';\n\nconst { accent } = colors;\nconst { desktop } = secondary;\n\nconst ListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin: 0 auto 20px;\n\n  @media screen and (min-width: ${desktop}px) {\n    justify-content: flex-start;\n  }\n`;\n\nconst ListItemStyles = styled.li`\n  width: calc((100% - 20px) / 2);\n  margin: 0 0 10px 0;\n  padding: 10px;\n  text-align: center;\n  font-size: 12px;\n  color: ${({ theme }) => theme.text};\n  border: 2px solid ${accent};\n  border-radius: 5px;\n\n  :hover {\n    background-color: ${accent};\n    transform: scale(1.005);\n  }\n\n  @media screen and (min-width: ${desktop}px) {\n    width: calc((100% - 40px) / 5);\n    margin: 0 10px 10px 0;\n\n    &:nth-child(5n) {\n      margin: 0 0 10px 0;\n    }\n  }\n`;\n\nconst LinkItemStyles = styled(Link)`\n  display: block;\n`;\n\nexport { ListStyles, ListItemStyles, LinkItemStyles };\n","import { useContext, useMemo } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { LessonContext } from 'context/LessonContextProvider';\nimport {\n  ILessonItem,\n  ILessonsItemComponentProps,\n} from 'interfaces/LessonsItem.interface';\nimport {\n  ListStyles,\n  ListItemStyles,\n  LinkItemStyles,\n} from 'components/LessonsList/LessonList.styled';\n\nconst LessonsList = ({ lessons }: ILessonsItemComponentProps) => {\n  const { setLesson } = useContext(LessonContext);\n  const sortedLessons = useMemo(\n    () => [...lessons].sort((a, b) => a.order - b.order),\n    [lessons],\n  );\n\n  const handleNotification = ({ order, title }: ILessonItem) =>\n    toast(`The video for the lesson ${order} \"${title}\" is locked!`);\n\n  const handleVideoPlayback = (\n    e: React.SyntheticEvent,\n    lesson: ILessonItem,\n  ) => {\n    e.preventDefault();\n\n    if (lesson?.status === 'locked') {\n      handleNotification(lesson);\n    } else {\n      setLesson(lesson);\n    }\n  };\n\n  return (\n    <>\n      <ListStyles>\n        {sortedLessons?.map(lesson => (\n          <ListItemStyles\n            key={lesson.id}\n            theme\n            onClick={e => handleVideoPlayback(e, lesson)}\n          >\n            <LinkItemStyles to={'lesson'}>\n              <b>Lesson {lesson.order}.</b>\n              <br />\n              {lesson.title}\n            </LinkItemStyles>\n          </ListItemStyles>\n        ))}\n      </ListStyles>\n      <Outlet />\n    </>\n  );\n};\n\nexport default LessonsList;\n","import styled from 'styled-components';\nimport { colors } from 'utils/colors';\n\nconst { accent } = colors;\n\nconst TitleStyles = styled.h1`\n  margin: 0 0 20px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst ImageContainerStyles = styled.div`\n  width: 60%;\n  height: 60%;\n  margin: 0 auto 20px;\n`;\n\nconst TextStyles = styled.p`\n  margin: 0 0 20px;\n  text-align: center;\n  font-size: 18px;\n  font-weight: 600;\n  color: ${accent};\n`;\n\nconst SkillsListStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  width: 90%;\n  margin: 0 auto 20px;\n`;\n\nconst SkillItemStyles = styled.li`\n  margin: 0 10px 0 0;\n  text-align: center;\n  font-size: 16px;\n  color: ${({ theme }) => theme.accent};\n`;\n\nexport {\n  TitleStyles,\n  ImageContainerStyles,\n  TextStyles,\n  SkillsListStyles,\n  SkillItemStyles,\n};\n","import { useEffect, useRef, useContext } from 'react';\nimport LessonsList from 'components/LessonsList';\nimport Loader from 'components/Loader';\nimport Error from 'components/Error';\nimport site_unavailable from 'images/site_unavailable.jpg';\nimport video_unavailable from 'images/video_unavailable.png';\nimport {useFetch} from 'petrovich-custom-hooks';\nimport { HLS_IS_SUPPORTED, COURSES_URL } from 'helpers/constants';\nimport { handleElementFormat } from 'helpers/formatHelper';\nimport { TokenContext } from 'context/TokenContextProvider';\nimport { LessonProvider } from 'context/LessonContextProvider';\nimport { colors } from 'utils/colors';\nimport {\n  TitleStyles,\n  ImageContainerStyles,\n  TextStyles,\n  SkillsListStyles,\n  SkillItemStyles,\n} from 'views/CoursePage/CoursePage.styled';\n\nconst CoursePage = () => {\n  const { token } = useContext(TokenContext);\n  const { response, isLoading, error } = useFetch(COURSES_URL, token);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const firstLesson = response?.lessons![0];\n  const firstLessonLink = firstLesson?.link;\n  const firstLessonDuration = firstLesson?.duration;\n  const { main } = colors;\n\n  useEffect(() => {\n    if (HLS_IS_SUPPORTED && firstLessonLink) {\n      const video = videoRef.current;\n\n      if (video) {\n        handleElementFormat(video, firstLessonLink);\n      }\n    }\n  }, [firstLessonLink]);\n\n  return (\n    <>\n      {isLoading && (\n        <Loader\n          ariaLabel={'ThreeDots'}\n          height={100}\n          width={100}\n          radius={5}\n          color={main}\n        />\n      )}\n\n      {response && (\n        <LessonProvider>\n          <TitleStyles>Course: {response?.title}</TitleStyles>\n          <ImageContainerStyles>\n            {firstLessonLink && firstLessonDuration ? (\n              <video ref={videoRef} width='100%' height='100%' controls />\n            ) : (\n              <img src={video_unavailable} alt='video unavailable' />\n            )}\n          </ImageContainerStyles>\n          <TextStyles>Description: {response?.description}</TextStyles>\n          <SkillsListStyles>\n            {response?.meta?.skills?.map(skill => (\n              <SkillItemStyles key={skill}>#{skill}</SkillItemStyles>\n            ))}\n          </SkillsListStyles>\n          <LessonsList lessons={response?.lessons} />\n        </LessonProvider>\n      )}\n\n      {error && <Error error={error} image={site_unavailable} />}\n    </>\n  );\n};\n\nexport default CoursePage;\n"],"names":["desktop","secondary","ContainerStyles","styled","_templateObject","_taggedTemplateLiteral","SpinnerStyles","_templateObject2","_ref","ariaLabel","height","width","radius","color","_jsx","children","BallTriangle","LessonContext","createContext","lesson","undefined","setLesson","LessonProvider","_useState","useState","_useState2","_slicedToArray","sampleCourseContext","Provider","value","handleElementFormat","element","sourceLink","hls","Hls","loadSource","attachMedia","accent","colors","ListStyles","ListItemStyles","theme","text","LinkItemStyles","Link","_templateObject3","lessons","useContext","sortedLessons","useMemo","_toConsumableArray","sort","a","b","order","handleVideoPlayback","e","preventDefault","status","_ref2","title","toast","concat","handleNotification","_jsxs","_Fragment","map","onClick","to","id","Outlet","TitleStyles","ImageContainerStyles","TextStyles","SkillsListStyles","_templateObject4","SkillItemStyles","_templateObject5","_response$meta","_response$meta$skills","token","TokenContext","_useFetch","useFetch","COURSES_URL","response","isLoading","error","videoRef","useRef","firstLesson","firstLessonLink","link","firstLessonDuration","duration","main","useEffect","HLS_IS_SUPPORTED","video","current","Loader","ref","controls","src","video_unavailable","alt","description","meta","skills","skill","LessonsList","Error","image","site_unavailable"],"sourceRoot":""}